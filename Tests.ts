
import { Evaluator, Parser} from './src/SimpleLangEvaluator'


console.log("\n")
console.log("Test 1")
console.log((new Evaluator()).evaluate('1 + 2; 2 + 3;'))
console.log("\n")
console.log("Test 1.1")
console.log((new Evaluator()).evaluate('{1 + 1;}'))
console.log("\n")
console.log("Test 2")
console.log((new Evaluator()).evaluate('((true && false) || false) || true;'))
console.log("\n")
console.log("Test 3")
console.log((new Evaluator()).evaluate("let z : int = 10; z;"))
console.log("\n")
console.log("Test 4")
console.log((new Evaluator()).evaluate("let f = |a : int| -> int {return a + 1;} f(3);"))
console.log("\n")
console.log("Test 4.1")
console.log((new Evaluator()).evaluate("let f = |a : int| -> undefined {1;return undefined;} f(3);"))
console.log("\n")
console.log("Test 4.2")
console.log((new Evaluator()).evaluate("let f = | | -> undefined {1;return undefined;} f();"))
console.log("\n")
console.log("Test 4.3")
console.log((new Evaluator()).evaluate("let f = |a : int, b : int| -> int {1;return a + b;} f(1, 2);"))
console.log("\n")
console.log("Test 5")
console.log(new Evaluator().evaluate("while(false) {1;}"))
console.log("\n")
console.log("Test 5.5")
console.log(new Evaluator().evaluate(" let mut z: int  = 0; while(z < 10) {z = z + 1;} z;"))
console.log("\n")
console.log("Test 6")
console.log(new Evaluator().evaluate("1 == 2;"))
console.log("\n")
console.log("Test 6.5")
console.log(new Evaluator().evaluate("let mut z: int = 0; if (false) {z = 1;} else {z = 2;} z;"))
console.log("\n")
console.log("Test 7")
console.log(new Evaluator().evaluate("1 <= 2;"))
console.log("\n")
console.log("Test 8")
console.log(new Evaluator().evaluate("let z: int  = 10; {let z : int = 20; z;} z; "))
console.log("\n")
console.log("Test 9")
console.log(new Evaluator().evaluate("let z: int  = 10; z = 20; z; "))
console.log("\n")
console.log("Test 10")
console.log(new Evaluator().evaluate("let mut z: int  = 10; z = 20; z == 20; "))
console.log("\n")
console.log("Test 11")
console.log(new Evaluator().evaluate("let mut z: int = 10; let x : &mut int = &mut z; *x = 1; *x;"))
console.log("\n")
console.log("Test 11.1")
console.log(new Evaluator().evaluate("let mut z: int = 10; let x : &mut int = &mut z; let y : &mut int = x; *x;"))
console.log("\n")
console.log("Test 11.2")
console.log(new Evaluator().evaluate("let mut z: int = 10; let x : &mut int = &mut z; let y : &int = &z;"))
console.log("\n")
console.log("Test 11.3")
console.log(new Evaluator().evaluate("let mut z: int = 10; let x : &int = &z; let y : &mut int = &mut z;"))
console.log("\n")
console.log("Test 11.4")
console.log(new Evaluator().evaluate("let mut z: int = 10; {let x : &mut int = &mut z;} let y : &int = &z; *y;"))
console.log("\n")
console.log("Test 11.5")
console.log(new Evaluator().evaluate("let mut z: int = 10; {let x : &int = &z;} let y : &mut int = &mut z; *y;"))
console.log("\n")
console.log("Test 12")
console.log((new Evaluator()).evaluate("let mut z : int = 10; let x : &int = &z; " +
    "fn f (a : int) -> int {return *x + a + 1;} z = 5; f(3);"))
console.log("\n")
console.log("Test 12.5")
console.log((new Evaluator()).evaluate("let mut z : int = 10; let x : &int = &z; " +
    "fn f (a : int) -> int {*x = 1; return *x + a + 1;} z = 5; f(3);"))
console.log("\n")
console.log("Test 13")
console.log((new Evaluator()).evaluate("let mut z : int = 10; let x : &mut int = &mut z;" +
    "fn f (a : int) -> int {*x = 5; return *x + a + 1;}  f(3);"))
console.log("\n")
console.log("Test 13.1")
console.log((new Evaluator()).evaluate("let mut z : int = 10;" +
    "fn f (a : &mut int) -> int {return *a + 1;}  f(&mut z);"))
console.log("\n")
console.log("Test 14")
console.log((new Evaluator()).evaluate("let mut z : int = 10; let mut x : &mut int = &mut z;" +
    "let y : &int = &z;"))
console.log("\n")
console.log("Test 14.1")
console.log((new Evaluator()).evaluate("let mut z : int = 10; let mut x : &mut int = &mut z;" +
    "let y : &mut int = x; z;"))
console.log("\n")
console.log("Test 14.2")
console.log((new Evaluator()).evaluate("let mut z : int = 10; let mut x : &mut int = &mut z;" +
    "let y : &mut int = x; *x;"))
console.log("\n")
console.log("Test 14.2")
console.log((new Evaluator()).evaluate("let mut z : int = 10; let mut x : &mut int = &mut z;" +
    "{let y : &mut int = x;} x = &mut z; *x;"))
console.log("\n")
console.log("Test 14.3")
console.log((new Evaluator()).evaluate("let mut z : int = 10; let mut x : &mut int = &mut z;" +
    "{let y : &mut int = x;} let a : &int = &z; *a;"))
console.log("\n")
console.log("Test 14.4")
console.log((new Evaluator()).evaluate("let mut z : int = 10;" +
    "{let mut x : &int = &z; let y : &int = x; let a : &int = x; let b : &int = x; let c : &int = x;} let d : &mut int = &mut z; *d;"))
console.log("\n")
console.log("Test 14.5")
console.log((new Evaluator()).evaluate("let mut z : int = 10;" +
    "{let mut x : &int = &z; let y : &int = x; let a : &int = x; let b : &int = x; let c : &int = x;} let d : &mut int = &mut z; " +
    "let e : &int = &z;"))
console.log("\n")
console.log("Test 15")
console.log((new Evaluator()).evaluate("let x : string = \"1\"; let y : string = x; x;"))
console.log("\n")
console.log("Test 15.1")
console.log((new Evaluator()).evaluate("let x : string = \"1\"; x;"))
console.log("\n")
console.log("Test 15.2")
console.log((new Evaluator()).evaluate("let x : string = \"1\"; let y : &string = &x; *y;"))
console.log("\n")
console.log("Test 15.3")
console.log((new Evaluator()).evaluate("let x : string = \"HelloWorld\"; let y : &string = &x; *y;"))
console.log("\n")
console.log("Test 15.4")
console.log((new Evaluator()).evaluate("let mut x : string = \"1\"; let mut y : string = x; x = \"2\"; x;"))
console.log("\n")
console.log("Test 15.4")
console.log((new Evaluator()).evaluate("let mut x : string = \"1\"; let y : &string = &x; let z : string = x;"))
console.log("\n")
console.log("Test 15.5")
console.log((new Evaluator()).evaluate("let mut x : string = \"1\"; let z : string = x; let y : &string = &x;"))
console.log("\n")
console.log("Test 15.6")
console.log((new Evaluator()).evaluate("let mut x : string = \"1\"; {let y : &string = &x;} let z : string = x; z;"))
console.log("\n")
console.log("Test 15.7")
console.log((new Evaluator()).evaluate("let mut x : string = \"1\"; let mut z : &string = &x; {let y : string = \"2\"; z = &y;}  *z;"))
console.log("\n")
console.log("Test 15.7")
console.log((new Evaluator()).evaluate("let mut x : string = \"1\"; let mut z : &string = &x; {let y : string = \"2\"; z = &y;}  z = &x; *z;"))
console.log("\n")
console.log("Test 16")
console.log((new Evaluator()).evaluate("let x : int = 1; let x : int = 2;"))
console.log("Test 17")
console.log((new Evaluator()).evaluate("let mut x : string = \"1\"; let y : &mut string = &mut x; let z : string = *y"))
//console.log((new Evaluator()).evaluate("let int: a = 10; let &int: b = &a; let &int : c = b; b;"))
//console.log((new Evaluator()).typeCheck("let mut int: z = 10;"))
